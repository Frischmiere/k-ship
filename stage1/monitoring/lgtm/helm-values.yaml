grafana:
  serviceMonitor:
    enabled: true
  datasources:
    datasources.yaml:
      datasources:
        - name: Loki
          uid: loki
          type: loki
          url: http://lgtm-loki-gateway
          isDefault: false
        - name: Mimir
          uid: prom
          type: prometheus
          url: http://lgtm-mimir-nginx/prometheus
          isDefault: true
          jsonData:
            prometheusType: mimir
        - name: Tempo
          uid: tempo
          type: tempo
          url: http://lgtm-tempo-query-frontend:3100
          isDefault: false
          jsonData:
            tracesToLogsV2:
              datasourceUid: loki
            lokiSearch:
              datasourceUid: loki
            tracesToMetrics:
              datasourceUid: prom
            serviceMap:
              datasourceUid: prom
        - name: PrometheusRules
          uid: kpspr
          type: prometheus
          url: http://kps-kube-prometheus-stack-prometheus:9090
          isDefault: false
          jsonData:
            # Valid options for implementation include mimir, cortex and prometheus
            implementation: prometheus
        - name: Alertmanager
          uid: kpsam
          type: alertmanager
          url: http://kps-kube-prometheus-stack-alertmanager:9093
          isDefault: false
          jsonData:
            implementation: prometheus
            handleGrafanaManagedAlerts: true
  sidecar:
    skipTlsVerify: true
    # resources:
    #   requests:
    #     cpu: 10m
    #     memory: 64Mi
    #   limits:
    #     memory: 64Mi
    dashboards:
      enabled: true
      searchNamespace: ALL
      resource: configmap
loki:
  serviceMonitor:
    enabled: true
  prometheusRule:
    enabled: true
  ingester:
    # resources:
    #   requests:
    #     cpu: 20m
    #     memory: 512Mi
    #   limits:
    #     memory: 512Mi
    affinity: ""
  distributor:
    # resources:
    #   requests:
    #     cpu: 20m
    #     memory: 512Mi
    #   limits:
    #     memory: 512Mi
    affinity: ""
  querier:
    # resources:
      # requests:
      #   cpu: 20m
      #   memory: 128Mi
      # limits:
      #   memory: 128Mi
    affinity: ""
  query_frontend:
    # resources:
    #   requests:
    #     cpu: 20m
    #     memory: 128Mi
    #   limits:
    #     memory: 128Mi
    affinity: ""
  gateway:
    # resources:
    #   requests:
    #     cpu: 20m
    #     memory: 128Mi
    #   limits:
    #     memory: 128Mi
    affinity: ""
tempo:
  metaMonitoring:
    serviceMonitor:
      enabled: true
  prometheusRule:
    enabled: true
  server:
    logFormat: json
  # admin_api:
  #   resources:
  #     requests:
  #       cpu: 10m
  #       memory: 32Mi
  #     limits:
  #       memory: 32Mi
  # ingester:
  #   resources:
  #     requests:
  #       cpu: 20m
  #       memory: 512Mi
  #     limits:
  #       memory: 512Mi
  distributor:
    # resources:
    #   requests:
    #     cpu: 20m
    #     memory: 512Mi
    #   limits:
    #     memory: 512Mi
    affinity: ""
  # compactor:
  #   resources:
  #     requests:
  #       cpu: 20m
  #       memory: 512Mi
  #     limits:
  #       memory: 512Mi
  querier:
    # resources:
    #   requests:
    #     cpu: 20m
    #     memory: 128Mi
    #   limits:
    #     memory: 128Mi
    affinity: ""
  query_frontend:
    # resources:
    #   requests:
    #     cpu: 20m
    #     memory: 128Mi
    #   limits:
    #     memory: 128Mi
    affinity: ""
  memcached:
    # resources:
    #   requests:
    #     cpu: 20m
    #     memory: 512Mi
    #   limits:
    #     memory: 512Mi
    affinity: ""
mimir:
  metaMonitoring:
    dashboards:
      enabled: true
    serviceMonitor:
      enabled: true
      clusterLabel: "{{ target.name }}-{{ args.environment }}"
    prometheusRule:
      enabled: true
      mimirAlerts: true
      mimirRules: true
  # admin_api:
  #   resources:
  #     requests:
  #       cpu: 10m
  #       memory: 32Mi
  #     limits:
  #       memory: 32Mi
  # alertmanager:
  #   resources:
  #     requests:
  #       cpu: 20m
  #       memory: 32Mi
  #     limits:
  #       memory: 32Mi
  # compactor:
  #   resources:
  #     requests:
  #       cpu: 20m
  #       memory: 512Mi
  #     limits:
  #       memory: 512Mi
  # distributor:
  #   resources:
  #     requests:
  #       cpu: 20m
  #       memory: 512Mi
  #     limits:
  #       memory: 512Mi
  # ingester:
  #   replicas: 1
  #   zoneAwareReplication:
  #     enabled: false
  #   resources:
  #     requests:
  #       cpu: 20m
  #       memory: 512Mi
  #     limits:
  #       memory: 512Mi
  # overrides_exporter:
  #   resources:
  #     requests:
  #       cpu: 20m
  #       memory: 128Mi
  #     limits:
  #       memory: 128Mi
  # querier:
  #   replicas: 1
  #   resources:
  #     requests:
  #       cpu: 20m
  #       memory: 128Mi
  #     limits:
  #       memory: 128Mi
  # query_frontend:
  #   resources:
  #     requests:
  #       cpu: 20m
  #       memory: 128Mi
  #     limits:
  #       memory: 128Mi
  # query_scheduler:
  #   replicas: 1
  #   resources:
  #     requests:
  #       cpu: 20m
  #       memory: 128Mi
  #     limits:
  #       memory: 128Mi
  # ruler:
  #   resources:
  #     requests:
  #       cpu: 20m
  #       memory: 128Mi
  #     limits:
  #       memory: 128Mi
  # store_gateway:
  #   zoneAwareReplication:
  #     enabled: false
  #   resources:
  #     requests:
  #       cpu: 20m
  #       memory: 512Mi
  #     limits:
  #       memory: 512Mi
  # minio:
  #   resources:
  #     requests:
  #       cpu: 20m
  #       memory: 512Mi
  #     limits:
  #       memory: 512Mi
  # nginx:
  #   resources:
  #     requests:
  #       cpu: 20m
  #       memory: 128Mi
  #     limits:
  #       memory: 128Mi
  # rollout_operator:
  #   resources:
  #     requests:
  #       cpu: 20m
  #       memory: 128Mi
  #     limits:
#       memory: 128Mi
