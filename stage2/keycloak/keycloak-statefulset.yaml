apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: keycloak
    app.kubernetes.io/instance: keycloak
  name: keycloak
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
      app.kubernetes.io/instance: keycloak
  serviceName: ""
  template:
    metadata:
      labels:
        app: keycloak
        app.kubernetes.io/instance: keycloak
    spec:
      containers:
        - args:
            - -Djgroups.dns.query=keycloak-discovery.keycloak
            - --verbose
            - start
            - --import-realm
          env:
            - name: KC_HOSTNAME_STRICT
              value: "false"
            - name: KC_HOSTNAME_STRICT_BACKCHANNEL
              value: "false"
            - name: KC_HTTP_ENABLED
              value: "true"
            - name: KC_HTTP_PORT
              value: "8080"
            - name: KC_HTTPS_PORT
              value: "8443"
            - name: KC_DB
              value: postgres
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: kcdb-user
                  optional: false
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: kcdb-user
                  optional: false
            - name: KC_DB_URL_DATABASE
              value: keycloak
            - name: KC_DB_URL_HOST
              value: kcpg
            - name: KC_CACHE
              value: ispn
            - name: KC_CACHE_STACK
              value: kubernetes
            - name: KC_LOG_FILE_OUTPUT
              value: json
            - name: KC_LOG_CONSOLE_OUTPUT
              value: json
            - name: KC_HEALTH_ENABLED
              value: "true"
            - name: KC_METRICS_ENABLED
              value: "true"
            - name: KC_PROXY_HEADERS
              value: xforwarded
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  key: username
                  name: keycloak-initial-admin
                  optional: false
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: keycloak-initial-admin
                  optional: false
            - name: KC_TRUSTSTORE_PATHS
              value: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          envFrom:
            - secretRef:
                name: gatekeeper-client
          image: quay.io/keycloak/keycloak:24.0.4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/live
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: keycloak
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/ready
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 2Gi
          startupProbe:
            failureThreshold: 600
            httpGet:
              path: /health/started
              port: 8080
              scheme: HTTP
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - name: realms
              mountPath: /opt/keycloak/data/import
      volumes:
        - name:  realms
          configMap:
            name: keycloak-realms
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      terminationGracePeriodSeconds: 30
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
